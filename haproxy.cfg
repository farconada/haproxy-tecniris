# para poner en un CRON
# echo "show map /tmp/oldpaths.map" | socat stdio /var/lib/haproxy/stats | awk '{print $2" "$3}' > /tmp/oldpaths.map
global
    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats level admin

    # utilize system-wide crypto-policies
    ssl-default-bind-ciphers PROFILE=SYSTEM
    ssl-default-server-ciphers PROFILE=SYSTEM
    ssl-default-bind-options ssl-min-ver TLSv1.2
    maxconn 100

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s





#---------------------------------------------------------------------
# stats dashboard
#---------------------------------------------------------------------
listen  stats
        bind *:1936
        mode            http
        log             global

        maxconn 10
        timeout queue   100s

        stats enable
        stats hide-version
        stats refresh 30s
        stats show-node
        stats auth admin:ladeverdadno
        stats uri  /haproxy?stats
        http-request use-service prometheus-exporter if { path /metrics }


frontend f
    bind :80
    acl             has_cookie req.cook(NOLATENGO) -m found
    acl             nolatengo path,map(/tmp/oldpaths.map) -m found
    http-request    set-var(txn.url) url
    http-request    set-var(txn.path) path
    default_backend bk_portalwww
    use_backend     b_old if has_cookie
    use_backend     b_old if has_cookie or nolatengo 

backend bk_portalwww
    option httpchk GET /index.html
    http-check expect status 200
    cookie PHPSESSID prefix indirect nocache
    http-response redirect location %[var(txn.url)]\nSet-Cookie:\ NOLATENGO=1;\ Max-Age=1;\ Path=%[var(txn.path)]\n  if { status 404 }
    server servernuevo1 servernuevo1:80 check inter 60s cookie L1
    server servernuevo2 servernuevo2:80 check inter 60s cookie L2

backend b_old
    option httpchk GET /index.html
    http-check expect status 200
    cookie PHPSESSID prefix indirect nocache
    http-response set-map(/tmp/oldpaths.map) %[var(txn.path)] b_old if { status 200 }
    server serverviejo serverviejo:80 check inter 60s cookie L1

